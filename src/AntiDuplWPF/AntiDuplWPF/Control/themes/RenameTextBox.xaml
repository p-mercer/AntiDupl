<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AntiDuplWPF.Control">

    <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:RenameTextBox}" TargetType="{x:Type local:RenameTextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="EditMode" Value="ReadOnly"/>
        <Setter Property="EnableEdit" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RenameTextBox}">
                    <Grid x:Name="Placement" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        <Button x:Name="PART_ApplyButtonHost" 
                            Grid.Column="1" Padding="3,1" 
                            Focusable="False"
                            Background="Transparent" 
                            BorderBrush="Transparent" >
                            <Image Stretch="None" Source="/AntiDuplWPF;component/Image/check.png"/>
                        </Button>
                        <Button x:Name="PART_ClearButtonHost" 
                            Grid.Column="2" Padding="2,0" 
                            IsHitTestVisible="True" 
                            Focusable="False" 
                            Background="Transparent" 
                            BorderBrush="Transparent" 
                            VerticalAlignment="Center" 
                            Width="Auto" Height="Auto">
                            <Image x:Name="SearchGlyphIcon" Stretch="None" Source="/AntiDuplWPF;component/Image/search_clear.png"/>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="UIElement.IsEnabled" Value="True"/>
                            <Condition Property="UIElement.IsFocused" Value="False"/>
                            <Condition Property="TextBox.Text" Value=""/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter TargetName="PART_PromptHost" Property="Visibility" Value="Visible"/>
                        </MultiTrigger.Setters>
                        </MultiTrigger>-->
                        <!--<Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter TargetName="PART_SearchButtonHost" Property="Style" Value="{StaticResource NoChromeButton}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="HasText" Value="True">
                            <Setter TargetName="PART_ClearButtonHost" Property="IsHitTestVisible" Value="True"/>
                            <Setter TargetName="SearchGlyphIcon" Property="Source" Value="/ImageComparerGUIWPF;component/Images/search_clear.png"/>
                        </Trigger>-->
                        <Trigger Property="EditMode" Value="Edit">
                            <!--<Setter TargetName="PART_ClearButtonHost" Property="IsHitTestVisible" Value="True"/>-->
                            <Setter TargetName="PART_ApplyButtonHost" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearButtonHost" Property="Visibility" Value="Visible"/>
                            <!--<Setter TargetName="SearchGlyphIcon" Property="Source" Value="/ImageComparerGUIWPF;component/Images/search_clear.png"/>-->
                            <Setter Property="TextBox.IsReadOnly" Value="False" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter TargetName="Placement" Property="Background" Value="White"/>
                        </Trigger>
                        <Trigger Property="EditMode" Value="ReadOnly">
                            <!--<Setter TargetName="PART_ClearButtonHost" Property="IsHitTestVisible" Value="False"/>-->
                            <Setter TargetName="PART_ApplyButtonHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ClearButtonHost" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="TextBox.IsReadOnly" Value="True" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter TargetName="Placement" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>